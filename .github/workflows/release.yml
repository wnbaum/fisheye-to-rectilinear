name: Build and Draft Release Executable

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version Number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Executable (Windows)
        if: matrix.os == 'windows-latest'
        run: pyinstaller --onefile main.py --name myapp.exe

      - name: Build Executable (Mac)
        if: matrix.os == 'macos-latest'
        run: pyinstaller --onefile main.py --name myapp-mac

      - name: Build Executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: pyinstaller --onefile main.py --name myapp-linux

      - name: Upload Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: myapp-windows
          path: dist/myapp.exe

      - name: Upload Mac Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: myapp-mac
          path: dist/myapp-mac

      - name: Upload Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: myapp-linux
          path: dist/myapp-linux

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-windows
          path: dist/

      - name: Download Mac Artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-mac
          path: dist/

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-linux
          path: dist/

      - name: Create Draft GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}